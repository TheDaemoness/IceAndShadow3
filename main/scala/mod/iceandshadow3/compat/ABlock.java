package mod.iceandshadow3.compat;

import java.util.List;

import mod.iceandshadow3.basics.BlockLogic;
import mod.iceandshadow3.basics.IBlockLogicProvider;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.block.state.IBlockState;
import net.minecraft.item.ItemStack;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.text.ITextComponent;
import net.minecraft.util.text.TextComponentString;
import net.minecraft.world.IBlockAccess;
import net.minecraftforge.common.IShearable;

public class ABlock extends Block implements IBlockLogicProvider, IShearable {
	
	protected final BlockLogic bl;
	
	//Critical that all BlockLogic adapters have a BlockLogic, int/Integer constructor.
	ABlock(BlockLogic blocklogic, int variantbias) {
		super(((BBlockLogic)blocklogic).materia.mcmat);
		bl = blocklogic;
		final BMateria mat = ((BBlockLogic)blocklogic).materia;
		this.blockHardness = mat.getBaseHardness();
		this.blockResistance = mat.getBaseBlastResist();
		this.lightOpacity = mat.getBaseOpacity();
		this.lightValue = mat.getBaseLuma();
		this.translucent = !mat.isOpaque();
		if(!bl.isTechnical()) SCreativeTab.add(this);
	}
	public int getVariantId(IBlockState bs) {
		return 0;
	}
	@Override
	public int maxVariants() {
		return 1;
	}
	
	@Override
	public BlockLogic getBlockLogic() {
		return bl;
	}

	@Override
	public boolean isShearable(ItemStack item, IBlockAccess world, BlockPos pos) {
		return bl.isToolClassEffective(HarvestMethod.SHEAR);
	}

	@Override
	public List<ItemStack> onSheared(ItemStack item, IBlockAccess world, BlockPos pos, int fortune) {
		//TODO: Autogenerated methodist stub.
		return null;
	}
}

